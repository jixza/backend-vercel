version: '3.8'

services:
  app:
    build: .
    container_name: pg_card_mvp
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - db
      - redis
    networks:
      - pg_card_network
    env_file:
      - .env

  db:
    image: postgres:15
    container_name: pg_card_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - pg_card_network
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env

  # Redis untuk caching, sessions, dan queue
  redis:
    image: redis:7-alpine
    container_name: pg_card_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - pg_card_network
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    container_name: pg_card_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - pg_card_network
    env_file:
      - .env

  # Queue Worker untuk background jobs (token cleanup, etc)
  queue:
    build: .
    container_name: pg_card_queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - db
      - redis
      - app
    networks:
      - pg_card_network
    env_file:
      - .env
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600

  # Scheduler untuk token cleanup otomatis
  scheduler:
    build: .
    container_name: pg_card_scheduler
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - db
      - redis
      - app
    networks:
      - pg_card_network
    env_file:
      - .env
    command: >
      sh -c "while true; do
        php artisan schedule:run
        sleep 60
      done"

volumes:
  db_data:
  redis_data:

networks:
  pg_card_network:
    driver: bridge